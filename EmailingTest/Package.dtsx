<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/23/2018 6:14:41 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="BML-328"
  DTS:CreatorName="BML-328\BML"
  DTS:DTSID="{BBCE4B30-0DBD-4136-B553-0374561B5E2F}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.0800.98"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="60"
  DTS:VersionGUID="{E490B8AE-48DE-4559-8113-0500B7FA1627}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[192.168.100.211]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{DB9AF0A0-19A7-4B70-9760-B0760DA3769F}"
      DTS:ObjectName="192.168.100.211">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=192.168.100.21;Integrated Security=True;Application Name=SSIS-Package-{DB9AF0A0-19A7-4B70-9760-B0760DA3769F}192.168.100.211;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5736BE2B-2BF7-4290-9A36-D1DFF4F3FDA6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorCheck">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6893A132-F502-4120-9C67-1FFEBCC2D8F0}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LastRunOnError">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{915A508B-70EF-485C-AF60-46B56ADCC5A3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="StartDate">
      <DTS:VariableValue
        DTS:DataType="8">1900/01/01</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{55F15752-29AB-47D0-911B-69DB8207FA75}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="StartTime">
      <DTS:VariableValue
        DTS:DataType="8">00:00</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables />
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{0E24650F-73CD-47F4-A6D5-5044BDA565C1}"
      DTS:EventID="1076330902"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{70AD5EAE-8D56-4777-9864-B385222071EB}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\ErrorCheck Counter"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{BEAF1D3B-CFC5-459B-BF3B-FB97A2DF683F}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="ErrorCheck Counter"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::ErrorCheck]= @[User::ErrorCheck]+1" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPostExecute]"
      DTS:CreationName="OnPostExecute"
      DTS:DTSID="{219B04F2-3FB3-49F9-9840-3C12008DD903}"
      DTS:EventID="0"
      DTS:EventName="OnPostExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{F9EC1AE2-5CFF-4CE8-979E-E6C3B92E63AD}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{E48297BD-0133-438A-A22F-35CE7BE2400E}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Compare Last Line Code"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="EmailingLog Reader"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT tel.Event_ID
        ,tel.Event_Name
        ,tel.Message
        ,tel.Execution_Path
        ,tel.Module
        ,tel.Event_Category FROM Gathering.tblEmailingLog tel
    WHERE Module='SalesModule'
    ORDER BY tel.Created_at DESC
  OFFSET 0 ROW
  FETCH NEXT 1 ROW ONLY</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Connections[OleDbConnection]"
                      connectionManagerID="{92A81132-8418-4643-9F72-4265A70F1AB4}:external"
                      connectionManagerRefId="Project.ConnectionManagers[192.168.100.21]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output]"
                      isSorted="true"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].Columns[Event_ID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].ExternalColumns[Event_ID]"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].Columns[Event_ID]"
                          name="Event_ID"
                          sortKeyPosition="1"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].Columns[Event_Name]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].ExternalColumns[Event_Name]"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].Columns[Event_Name]"
                          name="Event_Name"
                          sortKeyPosition="2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].Columns[Message]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].ExternalColumns[Message]"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].Columns[Message]"
                          name="Message"
                          sortKeyPosition="3"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].Columns[Execution_Path]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].ExternalColumns[Execution_Path]"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].Columns[Execution_Path]"
                          name="Execution_Path"
                          sortKeyPosition="4"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].Columns[Module]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].ExternalColumns[Module]"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].Columns[Module]"
                          name="Module"
                          sortKeyPosition="5"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].Columns[Event_Category]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].ExternalColumns[Event_Category]"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].Columns[Event_Category]"
                          name="Event_Category"
                          sortKeyPosition="6"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].ExternalColumns[Event_ID]"
                          dataType="i4"
                          name="Event_ID" />
                        <externalMetadataColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].ExternalColumns[Event_Name]"
                          dataType="nText"
                          name="Event_Name" />
                        <externalMetadataColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].ExternalColumns[Message]"
                          dataType="nText"
                          name="Message" />
                        <externalMetadataColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].ExternalColumns[Execution_Path]"
                          dataType="nText"
                          name="Execution_Path" />
                        <externalMetadataColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].ExternalColumns[Module]"
                          dataType="nText"
                          name="Module" />
                        <externalMetadataColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].ExternalColumns[Event_Category]"
                          dataType="nText"
                          name="Event_Category" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Error Output].Columns[Event_ID]"
                          dataType="i4"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Error Output].Columns[Event_ID]"
                          name="Event_ID" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Error Output].Columns[Event_Name]"
                          dataType="nText"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Error Output].Columns[Event_Name]"
                          name="Event_Name" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Error Output].Columns[Message]"
                          dataType="nText"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Error Output].Columns[Message]"
                          name="Message" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Error Output].Columns[Execution_Path]"
                          dataType="nText"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Error Output].Columns[Execution_Path]"
                          name="Execution_Path" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Error Output].Columns[Module]"
                          dataType="nText"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Error Output].Columns[Module]"
                          name="Module" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Error Output].Columns[Event_Category]"
                          dataType="nText"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Error Output].Columns[Event_Category]"
                          name="Event_Category" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join"
                  componentClassID="Microsoft.MergeJoin"
                  contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                  name="Merge Join"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of join to perform."
                      name="JoinType"
                      typeConverter="JoinType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the number of columns in the ordering key."
                      name="NumKeyColumns">6</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the null values are treated as equal values."
                      name="TreatNullsAsEqual">true</property>
                    <property
                      dataType="System.Int32"
                      description="Indicates the requested maximum buffers per input before blocking."
                      name="MaxBuffersPerInput">5</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Left Input]"
                      hasSideEffects="true"
                      name="Merge Join Left Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Left Input].Columns[Event_ID]"
                          cachedDataType="i4"
                          cachedName="Event_ID"
                          cachedSortKeyPosition="1"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].Columns[Event_ID]" />
                        <inputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Left Input].Columns[Event_Name]"
                          cachedDataType="nText"
                          cachedName="Event_Name"
                          cachedSortKeyPosition="2"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].Columns[Event_Name]" />
                        <inputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Left Input].Columns[Message]"
                          cachedDataType="nText"
                          cachedName="Message"
                          cachedSortKeyPosition="3"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].Columns[Message]" />
                        <inputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Left Input].Columns[Execution_Path]"
                          cachedDataType="nText"
                          cachedName="Execution_Path"
                          cachedSortKeyPosition="4"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].Columns[Execution_Path]" />
                        <inputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Left Input].Columns[Module]"
                          cachedDataType="nText"
                          cachedName="Module"
                          cachedSortKeyPosition="5"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].Columns[Module]" />
                        <inputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Left Input].Columns[Event_Category]"
                          cachedDataType="nText"
                          cachedName="Event_Category"
                          cachedSortKeyPosition="6"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].Columns[Event_Category]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Right Input]"
                      hasSideEffects="true"
                      name="Merge Join Right Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Right Input].Columns[Event_ID]"
                          cachedDataType="i4"
                          cachedName="Event_ID"
                          cachedSortKeyPosition="1"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].Columns[Event_ID]" />
                        <inputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Right Input].Columns[Event_Name]"
                          cachedDataType="nText"
                          cachedName="Event_Name"
                          cachedSortKeyPosition="2"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].Columns[Event_Name]" />
                        <inputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Right Input].Columns[Message]"
                          cachedDataType="nText"
                          cachedName="Message"
                          cachedSortKeyPosition="3"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].Columns[Message]" />
                        <inputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Right Input].Columns[Execution_Path]"
                          cachedDataType="nText"
                          cachedName="Execution_Path"
                          cachedSortKeyPosition="4"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].Columns[Execution_Path]" />
                        <inputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Right Input].Columns[Module]"
                          cachedDataType="nText"
                          cachedName="Module"
                          cachedSortKeyPosition="5"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].Columns[Module]" />
                        <inputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Right Input].Columns[Event_Category]"
                          cachedDataType="nText"
                          cachedName="Event_Category"
                          cachedSortKeyPosition="6"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output].Columns[Event_Category]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Outputs[Merge Join Output]"
                      isSorted="true"
                      name="Merge Join Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Outputs[Merge Join Output].Columns[Event_ID]"
                          dataType="i4"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Outputs[Merge Join Output].Columns[Event_ID]"
                          name="Event_ID"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Left Input].Columns[Event_ID]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Outputs[Merge Join Output].Columns[Event_Name]"
                          dataType="nText"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Outputs[Merge Join Output].Columns[Event_Name]"
                          name="Event_Name"
                          sortKeyPosition="2">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Left Input].Columns[Event_Name]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Outputs[Merge Join Output].Columns[Message]"
                          dataType="nText"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Outputs[Merge Join Output].Columns[Message]"
                          name="Message"
                          sortKeyPosition="3">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Left Input].Columns[Message]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Outputs[Merge Join Output].Columns[Execution_Path]"
                          dataType="nText"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Outputs[Merge Join Output].Columns[Execution_Path]"
                          name="Execution_Path"
                          sortKeyPosition="4">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Left Input].Columns[Execution_Path]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Outputs[Merge Join Output].Columns[Module]"
                          dataType="nText"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Outputs[Merge Join Output].Columns[Module]"
                          name="Module"
                          sortKeyPosition="5">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Left Input].Columns[Module]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Outputs[Merge Join Output].Columns[Event_Category]"
                          dataType="nText"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Outputs[Merge Join Output].Columns[Event_Category]"
                          name="Event_Category"
                          sortKeyPosition="6">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Left Input].Columns[Event_Category]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Result"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Result"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Result.Connections[OleDbConnection]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Result.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <externalMetadataColumns
                        isUsed="True" />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Result.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Result.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Result.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Result.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Result.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Result.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Temp Reader"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT tel.Event_ID
        ,tel.Event_Name
        ,tel.Message
        ,tel.Execution_Path
        ,tel.Module
        ,tel.Event_Category FROM Gathering.TempSM_tblEmailingLog tel
WHERE Module='SalesModule'
    ORDER BY tel.Created_at DESC
  OFFSET 0 ROW
  FETCH NEXT 1 ROW ONLY</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Connections[OleDbConnection]"
                      connectionManagerID="{92A81132-8418-4643-9F72-4265A70F1AB4}:external"
                      connectionManagerRefId="Project.ConnectionManagers[192.168.100.21]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output]"
                      isSorted="true"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].Columns[Event_ID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].ExternalColumns[Event_ID]"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].Columns[Event_ID]"
                          name="Event_ID"
                          sortKeyPosition="1"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].Columns[Event_Name]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].ExternalColumns[Event_Name]"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].Columns[Event_Name]"
                          name="Event_Name"
                          sortKeyPosition="2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].Columns[Message]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].ExternalColumns[Message]"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].Columns[Message]"
                          name="Message"
                          sortKeyPosition="3"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].Columns[Execution_Path]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].ExternalColumns[Execution_Path]"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].Columns[Execution_Path]"
                          name="Execution_Path"
                          sortKeyPosition="4"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].Columns[Module]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].ExternalColumns[Module]"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].Columns[Module]"
                          name="Module"
                          sortKeyPosition="5"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].Columns[Event_Category]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].ExternalColumns[Event_Category]"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].Columns[Event_Category]"
                          name="Event_Category"
                          sortKeyPosition="6"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].ExternalColumns[Event_ID]"
                          dataType="i4"
                          name="Event_ID" />
                        <externalMetadataColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].ExternalColumns[Event_Name]"
                          dataType="nText"
                          name="Event_Name" />
                        <externalMetadataColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].ExternalColumns[Message]"
                          dataType="nText"
                          name="Message" />
                        <externalMetadataColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].ExternalColumns[Execution_Path]"
                          dataType="nText"
                          name="Execution_Path" />
                        <externalMetadataColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].ExternalColumns[Module]"
                          dataType="nText"
                          name="Module" />
                        <externalMetadataColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output].ExternalColumns[Event_Category]"
                          dataType="nText"
                          name="Event_Category" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Error Output].Columns[Event_ID]"
                          dataType="i4"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Error Output].Columns[Event_ID]"
                          name="Event_ID" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Error Output].Columns[Event_Name]"
                          dataType="nText"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Error Output].Columns[Event_Name]"
                          name="Event_Name" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Error Output].Columns[Message]"
                          dataType="nText"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Error Output].Columns[Message]"
                          name="Message" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Error Output].Columns[Execution_Path]"
                          dataType="nText"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Error Output].Columns[Execution_Path]"
                          name="Execution_Path" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Error Output].Columns[Module]"
                          dataType="nText"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Error Output].Columns[Module]"
                          name="Module" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Error Output].Columns[Event_Category]"
                          dataType="nText"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Error Output].Columns[Event_Category]"
                          name="Event_Category" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code.Paths[Merge Join Output]"
                  endId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Result.Inputs[OLE DB Destination Input]"
                  name="Merge Join Output"
                  startId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Outputs[Merge Join Output]" />
                <path
                  refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code.Paths[OLE DB Source Output1]"
                  endId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Right Input]"
                  name="OLE DB Source Output"
                  startId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code.Paths[OLE DB Source Output]"
                  endId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join.Inputs[Merge Join Left Input]"
                  name="OLE DB Source Output"
                  startId="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Create Temp Table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{6F35DC4C-FB41-4133-BBDE-BB01C010A3BC}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Temp Table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{92A81132-8418-4643-9F72-4265A70F1AB4}"
              SQLTask:SqlStatementSource="DROP TABLE IF EXISTS [Gathering].TempSM_tblEmailingLog CREATE TABLE [Gathering].TempSM_tblEmailingLog(ID int IDENTITY (1, 1) PRIMARY KEY, Event_ID int, &#xA;Event_Name NVARCHAR(MAX), Created_at DATETIME, Message NVARCHAR(MAX), Execution_Path NVARCHAR(MAX), Module NVARCHAR(MAX), &#xA;Event_Category NVARCHAR(MAX));" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\On Error"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{6852C3BF-0B08-4BD9-99F3-05A0C9160EEB}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="On Error"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="[Data Reader].[SqlCommand]">"SELECT
  op.[object_name]
 ,om.[message]
  ,emc.execution_path
FROM SSISDB.internal.operations AS op
JOIN SSISDB.internal.event_messages AS emc
  ON op.operation_id = emc.operation_id
JOIN SSISDB.internal.operation_messages AS om
  ON emc.event_message_id = om.operation_message_id
WHERE op.[object_name] = 'SalesModule'
AND op.caller_name = 'BAMILO\\BI-SERVER$'
AND emc.event_name IN ('OnError')
AND op.start_time &lt;'" +(DT_WSTR, 25)@[System::StartTime] + "'
ORDER BY om.message_time ASC
OFFSET 0 ROW
FETCH NEXT 1 ROW ONLY"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Inputs[Data Conversion Input].Columns[object_name]"
                          cachedDataType="wstr"
                          cachedLength="260"
                          cachedName="object_name"
                          lineageId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].Columns[object_name]" />
                        <inputColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Inputs[Data Conversion Input].Columns[message]"
                          cachedDataType="nText"
                          cachedName="message"
                          lineageId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].Columns[message]" />
                        <inputColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Inputs[Data Conversion Input].Columns[execution_path]"
                          cachedDataType="nText"
                          cachedName="execution_path"
                          lineageId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].Columns[execution_path]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of object_name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of object_name]"
                          name="Copy of object_name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].Columns[object_name]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of message]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="1000"
                          lineageId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of message]"
                          name="Copy of message"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].Columns[message]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of execution_path]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="500"
                          lineageId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of execution_path]"
                          name="Copy of execution_path"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].Columns[execution_path]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package.EventHandlers[OnPostExecute]\On Error\Data Fetcher"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Data Fetcher"
                  version="11">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String StartDate
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["StartDate"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String StartTime
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["StartTime"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text.RegularExpressions;
using System.Xml;
using System.Collections.Generic;
using System.IO;
using System.Windows.Forms;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        //MessageBox.Show("we are here");
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {



         base.PostExecute();
        /*
         * Add your code here
         */

    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {

        
        //IDTSVariables100 varCollection = null;
        string object_name = Row.objectname + "";
        //this.VariableDispenser.LockForRead("User::object_name");
        //object_name = varCollection["User::object_name"].Value.ToString();
        string message = Row.message+"";
        //this.VariableDispenser.LockForRead("User::message");
        //message = varCollection["User::message"].Value.ToString();
        string execution_path = Row.executionpath + "";
        //this.VariableDispenser.LockForRead("User::execution_path");
        //execution_path = varCollection["User::execution_path"].Value.ToString();


        string the_url = "";
        System.Uri url = null;
        System.Net.WebClient wb = (new System.Net.WebClient());
        try
        {

            the_url = "http://sysmail.fagms.net/c/tm?AID=166368&ACTION=SYSTEM&email=sepideh.berangi@Bamilo.com&event_id=0&event_name=Task Failed&event_description="+object_name+"----"+ execution_path + "----" + message + " &event_category=Error_Events&container_name=System_Health&event_date=" + this.Variables.StartDate + "&event_time=" + this.Variables.StartTime;
            url = new Uri(the_url);

        }
        catch (Exception e)
        {
            MessageBox.Show("Fundamental Error");

        }
        //System.IO.Stream stream;
        for (int k = 0; k < 3; k++)
        {
            try
            {

                string s = wb.DownloadString(the_url);
                XmlReader reader = XmlReader.Create(new StringReader(s));
                Dictionary<string, string> dic = new Dictionary<string, string>();

                int i = 0;
                while (i < 2)
                {
                    reader.Read();
                    if (reader.Value.Trim() != "" || reader.Name.Trim() != "")
                    {
                        i++;
                    }
                }
                i = 0;
                for (i = 0; i < 4; i++)
                {
                    while (reader.Read())
                        if (reader.Value.Trim() != "" || reader.Name.Trim() != "")
                            break;


                    String key = reader.Name;//tag start

                    reader.Read();//value
                    String value = reader.Value;
                    // Console.WriteLine(key + "    " + value);
                    dic.Add(key, value);

                    reader.Read();//tag end
                }
                reader.Close();
                if (dic["emstatus"] != "ERROR")
                {
                    break;
                }

            }
            catch (Exception e)
            {
                MessageBox.Show("Sending ERROR! Email \n"+message);
                MessageBox.Show(e.Message);
                //use e to read exception
            }


            /*
             * Add your code here
             */
        }

    }
}]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String objectname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool objectname_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public BlobColumn message
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[1]];
        }
    }
    public bool message_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public BlobColumn executionpath
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[2]];
        }
    }
    public bool executionpath_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7a55be7565c04adcbb7ca459879fb03b.Properties.Settings.get_Default():SC_7a55be7565c04adcbb7ca459879fb03b.Properties.Sett" +
    "ings")]

namespace SC_7a55be7565c04adcbb7ca459879fb03b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_7a55be7565c04adcbb7ca459879fb03b.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{DDD147DA-CE4D-4164-9927-3FA7226D42C3}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7a55be7565c04adcbb7ca459879fb03b</RootNamespace>
    <AssemblyName>SC_7a55be7565c04adcbb7ca459879fb03b</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_7a55be7565c04adcbb7ca459879fb03b</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_7a55be7565c04adcbb7ca459879fb03b</msb:DisplayName>
		<msb:ProjectId>{8039A2C6-56BF-48F0-ACBA-15858307F9F7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_7a55be7565c04adcbb7ca459879fb03b.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7a55be7565c04adcbb7ca459879fb03b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7a55be7565c04adcbb7ca459879fb03b")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7a55be7565c04adcbb7ca459879fb03b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7a55be7565c04adcbb7ca459879fb03b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7a55be7565c04adcbb7ca459879fb03b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7a55be7565c04adcbb7ca459879fb03b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7a55be7565c04adcbb7ca459879fb03b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_7a55be7565c04adcbb7ca459879fb03b.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJe1bVoAAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAAAjsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALA6AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAB4OQAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAACBsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADk
OgAAAAAAAEgAAAACAAUAFCQAAKwUAAABAAAAAAAAAMA4AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAQA3wEAAAEAABEDbwYAAAYl
LQYmcgEAAHAKA28IAAAGKBIAAAoLA28KAAAGKBIAAAoMcgEAAHANcxMAAAoTBB8KjR8AAAElFnID
AABwoiUXBqIlGHIeAQBwoiUZCKIlGnIeAQBwoiUbB6IlHHIoAQBwoiUdAnsCAAAEbxQAAAaiJR5y
twEAcKIlHwkCewIAAARvFQAABqIoFAAACg0JcxUAAAom3g4mctEBAHAoFgAACibeABYTBTgkAQAA
ABEECW8XAAAKcxgAAAooGQAAChMGcxoAAAoTBxYTCCs+EQZvGwAACiYRBm8cAAAKbx0AAApyAQAA
cCgeAAAKLRgRBm8fAAAKbx0AAApyAQAAcCgeAAAKLAYRCBdYEwgRCBgyvRYTCBYTCCtsEQZvHAAA
Cm8dAAAKcgEAAHAoHgAACi0hEQZvHwAACm8dAAAKcgEAAHAoHgAACi0JEQZvGwAACi3HEQZvHwAA
ChMJEQZvGwAACiYRBm8cAAAKEwoRBxEJEQpvIAAAChEGbxsAAAomEQgXWBMIEQgaMr8RBm8hAAAK
EQdy9QEAcG8iAAAKcgcCAHAoHgAACiwC3i7eHnITAgBwBygjAAAKKBYAAAombyQAAAooFgAACibe
ABEFF1gTBREFGT/U/v//KgABHAAAAAA1AGecAA4RAAABAACzAP+yAR4RAAABHgIoDgAABioqAgME
BSglAAAKKlICeyYAAAoCeycAAAoWlG8oAAAKKiICFigpAAAKKmYCeyYAAAoCeycAAAoXlG8qAAAK
dBUAAAEqIgIXKCkAAAoqZgJ7JgAACgJ7JwAAChiUbyoAAAp0FQAAASoiAhgoKQAACioeAigrAAAK
Kh4CKCwAAAoqfgIoLQAACgICcxIAAAZ9AQAABAICcxMAAAZ9AgAABCqSBHJBAgBwGm8uAAAKLBUC
BQIDKC8AAAoOBHMFAAAGbxAAAAYqSisHAgNvEQAABgNvDAAABi3xKgYqOgIoMAAACgIDfQMAAAQq
OgIoMAAACgIDfQQAAAQqlgJ7BAAABG8xAAAKclECAHBvMgAACigzAAAKbzQAAAp0HwAAASqWAnsE
AAAEbzEAAApyZQIAcG8yAAAKKDMAAApvNAAACnQfAAABKh4CKDAAAAoqrn4FAAAELR5yeQIAcNAH
AAACKDUAAApvNgAACnM3AAAKgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqHgIoOAAA
CioucxsAAAaABwAABCoAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADYBgAA
I34AAEQHAABQCAAAI1N0cmluZ3MAAAAAlA8AAOwCAAAjVVMAgBIAABAAAAAjR1VJRAAAAJASAAAc
AgAAI0Jsb2IAAAAAAAAAAgAAAVcVogkJAQAAAPoBMwAWAAABAAAALAAAAAgAAAAHAAAAHAAAAA0A
AAA4AAAAEAAAAAEAAAAEAAAACwAAAAwAAAABAAAAAQAAAAcAAAABAAAAAADpAwEAAAAAAAYAsQLa
BQYARQPaBQYA/QHHBQ8ATgYAAAYAKgK/BAYAlAK/BAYAdQK/BAYALAO/BAYA0QK/BAYA6gK/BAYA
QQK/BAYAXAKKAwoABQMvAQ4ANgcGBxIAQAVTBAYAOgCPAAYA0QRnBAoAcQUvARYAYgUvAQoA+AQv
ARYAigQvAQoAXgcvAQYA/wZnBAYA4AHHBQYAggX6BQYA7ASqBA4AsAHTAw4AEQLTAw4AfQGVBAYA
xQHaBQYAtgNnBA4AzwNnBBoAKAjXBhoAKQfXBgYAMwVYAAYASgVYAAYA2wRnBB4AEQCSBR4AAQCS
BVsA1AcAAB4AIgCSBQYAUAFnBAYA2wBnBAYANwi/BAAAAABHAAAAAAABAAEAAQAQAH8EAAAQAAEA
AQABABAAVQUAAEkAAQAFAAEAEABABwAAWQABAA4AAQAQAOwGAABdAAMAEgABABAAmAYAAF0ABAAT
AAAAEAABBl0GXQAFABYAAAEQAMcGXQZ1AAcAGgAGAOwG6wAGAJgG7wABAE4H8wABAE4H8wARAHME
9wARAG0B+wARALMA/wBQIAAAAADGAGMDBgABAFggAAAAAMYAbgMGAAEAYCAAAAAAxgAECAMBAQBo
IgAAAACGGLoFBgACAHAiAAAAAIYYugV5AAIAeyIAAAAAhggSAVoABQCQIgAAAACGCCQEVgAFAJki
AAAAAIYIzwAJAQUAsyIAAAAAhggRBFYABQC8IgAAAACGCL0DCQEFANYiAAAAAIYIOgRWAAUA3yIA
AAAAhgAbCFYABQDnIgAAAACGABEHVgAFAO8iAAAAAIYYugUGAAUADyMAAAAAxgCzBw4BBQA0IwAA
AADGAawHAwEJAEcjAAAAAMYBBAgDAQoASSMAAAAAhhi6BRgBCwBYIwAAAACGGLoFGAEMAGcjAAAA
AIYImwFaAA0AjSMAAAAAhgghAVoADQCzIwAAAACDGLoFBgANALsjAAAAAJMIfgUeAQ0A5yMAAAAA
kwhVASMBDQDuIwAAAACTCGEBKAENAPYjAAAAAJYIHQcuAQ4A/SMAAAAAhhi6BQYADgAFJAAAAACR
GMAFMwEOAAAAAQAfCAAAAQB3BQAAAgCiBgAAAwAGBQAAAQBQAAAAAgAIAQAAAwB3BQAABAAGBQAA
AQB3BQAAAQAfCAAAAQBkBwAAAQBkBwAAAQCEAwkAugUBABEAugUGABkAugUKACkAugUQADEAugUQ
ADkAugUQAEEAugUQAEkAugUQAFEAugUQAFkAugUQAGEAugUQAGkAugUGAMEAugUGAOEAugUVAPEA
ugUGALEAYwMGALEAbgMGAPkA+AYwAHEAugUGAPkA+AY1AAEBugUQAAkBIwg7AHEApANCABkBugUQ
AHkAqQFHAAwAugUGAHkAqgBWAHkAegNaAPkAbgRaAPkAQAheAHkA/wBaAAwArwBkAHkAlQEGAAwA
XgRsAPkA+AZzAIkAwwBaAJEAugV5AJEAdwWDAJEAogaHAJkAswOLAJEATASQAJkAXgSVAJEAGwhW
AJEAEQdWALEAugUGAPkA0AaaALEAtgaiALkAugUGALEAjAaoADEBXgSuALEA7we1ADkBwAe7AFEB
7QDCAFEBMwjLAMkAugXRAOkAugUGAC4ACwBTAS4AEwBcAS4AGwB7AS4AIwCEAS4AKwCtAS4AMwCt
AS4AOwCtAS4AQwCEAS4ASwCzAS4AUwCtAS4AWwDKAUMAYwAUAuEAewAUAuMAawAUAikBcwB7AUkB
cwB7ARsAAwABAAYABwAHAAkACAALAAAAFgE3AQAAKAQ7AQAA0wA/AQAAFQQ7AQAAwQM/AQAAPgQ7
AQAAnwE3AQAAJQE3AQAAggVEAQAAdQFJAQAAIQdOAQIABgADAAIABwAFAAIACAAHAAIACQAJAAIA
CgALAAIACwANAAIAFAAPAAIAFQARAAIAFwATAAIAGAAVAAEAGQAVAAIAGgAXAE8ABIAAAAEAAAAA
AAAAAAAAAAAAYgAAAAQAAAAAAAAAAAAAANkAhgAAAAAADgAAAAAAAAAAAAAA4gBuBwAAAAAEAAAA
AAAAAAAAAADZAGcEAAAAAAQAAAAAAAAAAAAAANkAUwQAAAAADgAAAAAAAAAAAAAA4gCLBwAAAAAE
AAAAAAAAAAAAAADZANcGAAAAAA4AAAAAAAAAAAAAAOIAEAUAAAAAAAAAAAEAAAALBgAAAAAASURU
U1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAARGlj
dGlvbmFyeWAyADxNb2R1bGU+AElucHV0SUQAU3lzdGVtLklPAFNDXzdhNTViZTc1NjVjMDRhZGNi
YjdjYTQ1OTg3OWZiMDNiAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAFJlYWQA
QWRkAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBnZXRfbWVzc2FnZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfTmFtZQBJbnB1dE5hbWUAZ2V0X29iamVjdG5hbWUA
Z2V0X1N0YXJ0VGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBDbG9zZQBnZXRfU3RhcnREYXRlAENyZWF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxl
ckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRl
AEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVu
dGltZS5WZXJzaW9uaW5nAERvd25sb2FkU3RyaW5nAEdldFN0cmluZwBnZXRfZXhlY3V0aW9ucGF0
aABVcmkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzdhNTViZTc1NjVjMDRhZGNiYjdjYTQ1OTg3
OWZiMDNiLmRsbABnZXRfbWVzc2FnZV9Jc051bGwAZ2V0X29iamVjdG5hbWVfSXNOdWxsAGdldF9l
eGVjdXRpb25wYXRoX0lzTnVsbABTeXN0ZW0uWG1sAGdldF9JdGVtAFN5c3RlbQBUcmltAHJlc291
cmNlTWFuAFNjcmlwdE1haW4AQmxvYkNvbHVtbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0u
R2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNv
bgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVy
LkRUU1J1bnRpbWVXcmFwAFN0cmluZ1JlYWRlcgBYbWxSZWFkZXIAVGV4dFJlYWRlcgBJbnB1dDBC
dWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0u
RGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3Vy
Y2VzAFNDXzdhNTViZTc1NjVjMDRhZGNiYjdjYTQ1OTg3OWZiMDNiLlByb3BlcnRpZXMuUmVzb3Vy
Y2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ183YTU1YmU3NTY1YzA0YWRjYmI3Y2E0NTk4
NzlmYjAzYi5Qcm9wZXJ0aWVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRl
eGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAFN5c3RlbS5XaW5kb3dzLkZvcm1z
AENvbm5lY3Rpb25zAENvbmNhdABPYmplY3QAU3lzdGVtLk5ldABFbmRPZlJvd3NldABnZXRfRGVm
YXVsdABEaWFsb2dSZXN1bHQAV2ViQ2xpZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50
AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAR2V0VmFsdWVXaXRoQ29u
dGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABJbnB1
dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAU2hvdwBNZXNzYWdlQm94AGdldF9Bc3NlbWJseQBv
cF9JbmVxdWFsaXR5AAAAAAEAgRloAHQAdABwADoALwAvAHMAeQBzAG0AYQBpAGwALgBmAGEAZwBt
AHMALgBuAGUAdAAvAGMALwB0AG0APwBBAEkARAA9ADEANgA2ADMANgA4ACYAQQBDAFQASQBPAE4A
PQBTAFkAUwBUAEUATQAmAGUAbQBhAGkAbAA9AHMAZQBwAGkAZABlAGgALgBiAGUAcgBhAG4AZwBp
AEAAQgBhAG0AaQBsAG8ALgBjAG8AbQAmAGUAdgBlAG4AdABfAGkAZAA9ADAAJgBlAHYAZQBuAHQA
XwBuAGEAbQBlAD0AVABhAHMAawAgAEYAYQBpAGwAZQBkACYAZQB2AGUAbgB0AF8AZABlAHMAYwBy
AGkAcAB0AGkAbwBuAD0AAAktAC0ALQAtAAGAjSAAJgBlAHYAZQBuAHQAXwBjAGEAdABlAGcAbwBy
AHkAPQBFAHIAcgBvAHIAXwBFAHYAZQBuAHQAcwAmAGMAbwBuAHQAYQBpAG4AZQByAF8AbgBhAG0A
ZQA9AFMAeQBzAHQAZQBtAF8ASABlAGEAbAB0AGgAJgBlAHYAZQBuAHQAXwBkAGEAdABlAD0AABkm
AGUAdgBlAG4AdABfAHQAaQBtAGUAPQAAI0YAdQBuAGQAYQBtAGUAbgB0AGEAbAAgAEUAcgByAG8A
cgAAEWUAbQBzAHQAYQB0AHUAcwAAC0UAUgBSAE8AUgAALVMAZQBuAGQAaQBuAGcAIABFAFIAUgBP
AFIAIQAgAEUAbQBhAGkAbAAgAAoAAA9JAG4AcAB1AHQAIAAwAAATUwB0AGEAcgB0AEQAYQB0AGUA
ABNTAHQAYQByAHQAVABpAG0AZQAAcVMAQwBfADcAYQA1ADUAYgBlADcANQA2ADUAYwAwADQAYQBk
AGMAYgBiADcAYwBhADQANQA5ADgANwA5AGYAYgAwADMAYgAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAAFSGvpPWhSZAhvuViOGwvZwABCABAQgDIAABBSABARERBCAB
AQ4FIAEBEW0UBwsODg4OEjkIEj0VEkECDg4IDg4EAAEOHAUAAQ4dDgYAARGAiQ4EIAEODgcAARI9
EoCRBhUSQQIODgMgAAIDIAAOBQACAg4OByACARMAEwEGIAETARMABQACDg4OCSADARJNHQgSUQMG
Ek0DBh0IBCABDggEIAECCAQgARwIByACAg4RgJUFIAEdCAgFIAASgJkGIAESgJ0cBQAAEoChBiAB
HBKApQgAARKAqRGArQUgABKAsQcgAgEOEoCxCLd6XFYZNOCJCImEXc2AgMyRAwYSFAMGEhgDBhJZ
AwYSZQMGEmkDBhIgBSABARIMBCAAElUJIAQBCA4STRJRBSABARJZBAAAEmUEAAASaQUAAQESaQQA
ABIgAwAAAQMoAA4DKAACBCgAElUECAASZQQIABJpBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzdhNTViZTc1NjVjMDRhZGNiYjdjYTQ1
OTg3OWZiMDNiAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTgAAEkBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41
BAEAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIs
IG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9r
ZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIA
AAAAAAAAAAAAAFBBRFBBRFC0AAAAAAAAAAAAAAAAAAAAAgAAABwBAACUOQAAlBsAAFJTRFMAAAAA
AAAAAAAAAAAAAAAAAQAAAEM6XFVzZXJzXEJNTFxBcHBEYXRhXExvY2FsXFRlbXBcdnN0YVw0NTBi
OTY1NmIzZmU0OGE1OTJiOGUwZTdhNzNhOGQxZFxvYmpcUmVsZWFzZVxTQ183YTU1YmU3NTY1YzA0
YWRjYmI3Y2E0NTk4NzlmYjAzYi5wZGIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2DoAAAAAAAAA
AAAA8joAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOQ6AAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
QwBfADcAYQA1ADUAYgBlADcANQA2ADUAYwAwADQAYQBkAGMAYgBiADcAYwBhADQANQA5ADgANwA5
AGYAYgAwADMAYgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4A
MAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANwBhADUANQBiAGUANwA1
ADYANQBjADAANABhAGQAYwBiAGIANwBjAGEANAA1ADkAOAA3ADkAZgBiADAAMwBiAC4AZABsAGwA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAxADgAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAA
AAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA3AGEANQA1
AGIAZQA3ADUANgA1AGMAMAA0AGEAZABjAGIAYgA3AGMAYQA0ADUAOQA4ADcAOQBmAGIAMAAzAGIA
LgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANwBhADUANQBi
AGUANwA1ADYANQBjADAANABhAGQAYwBiAGIANwBjAGEANAA1ADkAOAA3ADkAZgBiADAAMwBiAAAA
NAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAAB
AEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAEOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_7a55be7565c04adcbb7ca459879fb03b</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::StartDate,User::StartTime</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">09</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package.EventHandlers[OnPostExecute]\On Error\Data Fetcher.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Fetcher.Inputs[Input 0].Columns[object_name]"
                          cachedDataType="wstr"
                          cachedLength="260"
                          cachedName="object_name"
                          lineageId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].Columns[object_name]"
                          name="object_name" />
                        <inputColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Fetcher.Inputs[Input 0].Columns[message]"
                          cachedDataType="nText"
                          cachedName="message"
                          lineageId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].Columns[message]"
                          name="message" />
                        <inputColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Fetcher.Inputs[Input 0].Columns[execution_path]"
                          cachedDataType="nText"
                          cachedName="execution_path"
                          lineageId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].Columns[execution_path]"
                          name="execution_path" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
                  name="Data Reader"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement used by the component to extract data."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT
  op.[object_name]
 ,om.[message]
  ,emc.execution_path
FROM SSISDB.internal.operations AS op
JOIN SSISDB.internal.event_messages AS emc
  ON op.operation_id = emc.operation_id
JOIN SSISDB.internal.operation_messages AS om
  ON emc.event_message_id = om.operation_message_id
WHERE op.[object_name] = 'SalesModule'
AND op.caller_name = 'BAMILO\BI-SERVER$'
AND emc.event_name IN ('OnError')
AND op.start_time &lt;'2/3/2018 5:31:27 PM'
ORDER BY om.message_time ASC
OFFSET 0 ROW
FETCH NEXT 1 ROW ONLY</property>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">30</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                      name="AllowImplicitStringConversion">true</property>
                    <property
                      dataType="System.String"
                      description="The Source database table name."
                      expressionType="Notify"
                      name="TableOrViewName"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specify the mode to retrieve external column information"
                      name="AccessMode"
                      typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Connections[IDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[192.168.100.211]"
                      connectionManagerRefId="Package.ConnectionManagers[192.168.100.211]"
                      description="Managed connection manager"
                      name="IDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output]"
                      name="ADO NET Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].Columns[object_name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].ExternalColumns[object_name]"
                          length="260"
                          lineageId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].Columns[object_name]"
                          name="object_name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].Columns[message]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].ExternalColumns[message]"
                          lineageId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].Columns[message]"
                          name="message"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].Columns[execution_path]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].ExternalColumns[execution_path]"
                          lineageId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].Columns[execution_path]"
                          name="execution_path"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].ExternalColumns[object_name]"
                          dataType="wstr"
                          length="260"
                          name="object_name" />
                        <externalMetadataColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].ExternalColumns[message]"
                          dataType="nText"
                          name="message" />
                        <externalMetadataColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output].ExternalColumns[execution_path]"
                          dataType="nText"
                          name="execution_path" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Error Output]"
                      isErrorOut="true"
                      name="ADO NET Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Error Output].Columns[object_name]"
                          dataType="wstr"
                          length="260"
                          lineageId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Error Output].Columns[object_name]"
                          name="object_name" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Error Output].Columns[message]"
                          dataType="nText"
                          lineageId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Error Output].Columns[message]"
                          name="message" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Error Output].Columns[execution_path]"
                          dataType="nText"
                          lineageId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Error Output].Columns[execution_path]"
                          name="execution_path" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package.EventHandlers[OnPostExecute]\On Error.Paths[ADO NET Source Output]"
                  endId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Inputs[Data Conversion Input]"
                  name="ADO NET Source Output"
                  startId="Package.EventHandlers[OnPostExecute]\On Error\Data Reader.Outputs[ADO NET Source Output]" />
                <path
                  refId="Package.EventHandlers[OnPostExecute]\On Error.Paths[Data Conversion Output]"
                  endId="Package.EventHandlers[OnPostExecute]\On Error\Data Fetcher.Inputs[Input 0]"
                  name="Data Conversion Output"
                  startId="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion.Outputs[Data Conversion Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\On Success"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{7E4ECE45-3155-4304-B8A2-9E54A71671E2}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="On Success">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_d5391ab22c1e49408bc08f2f2eb3cba5"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::StartDate,User::StartTime">
              <ProjectItem
                Name="ST_d5391ab22c1e49408bc08f2f2eb3cba5.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{d92e58f9-9668-4e08-9d01-d7ea7288842d}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_d5391ab22c1e49408bc08f2f2eb3cba5</RootNamespace>
    <AssemblyName>ST_d5391ab22c1e49408bc08f2f2eb3cba5</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d5391ab22c1e49408bc08f2f2eb3cba5.Properties.Settings.get_Default():ST_d5391ab22c1e49408bc08f2f2eb3cba5.Properties.Sett" +
    "ings")]

namespace ST_d5391ab22c1e49408bc08f2f2eb3cba5.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Xml;
using System.Collections.Generic;
using System.IO;
#endregion

namespace ST_d5391ab22c1e49408bc08f2f2eb3cba5
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // TODO: Add your code here


            //you can read the dic we have tags and their valus in there
            //emstatus contains the succes or fail value you can call that with : dic[emstatus]
            //and get the value
            //exception thrown to use specialy for 401 error that happens when you use this rapidly 
            //variable:"myxml" empty format is:
            // Dts.Variables["myxml"].Value
            //http://sysmail.fagms.net/c/tm?AID=166368&ACTION=SYSTEM&email=&event_id=&event_name=&event_description=&event_category=&container_name=&event_date=&event_time=


            string the_url = "";
            System.Uri url = null;
            System.Net.WebClient wb = (new System.Net.WebClient());
            try
            {

                the_url = "http://sysmail.fagms.net/c/tm?AID=166368&ACTION=SYSTEM&email=sepideh.berangi@Bamilo.com&event_id=0&event_name=successfulRun&event_description=Error Turned Into Success &event_category=Error_Events&container_name=System_Health&event_date=" + Dts.Variables["User::StartDate"].Value + "&event_time=" + Dts.Variables["User::StartTime"].Value;
                url = new Uri(the_url);
                
            }
            catch (Exception e)
            {
                MessageBox.Show("Fundamental Error");
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            //System.IO.Stream stream;
            for (int k = 0; k < 3; k++)
            {
                try
                {

                    string s = wb.DownloadString(the_url);
                    XmlReader reader = XmlReader.Create(new StringReader(s));
                    Dictionary<string, string> dic = new Dictionary<string, string>();

                    int i = 0;
                    while (i < 2)
                    {
                        reader.Read();
                        if (reader.Value.Trim() != "" || reader.Name.Trim() != "")
                        {
                            i++;
                        }
                    }
                    i = 0;
                    for (i = 0; i < 4; i++)
                    {
                        while (reader.Read())
                            if (reader.Value.Trim() != "" || reader.Name.Trim() != "")
                                break;



                        String key = reader.Name;//tag start

                        reader.Read();//value
                        String value = reader.Value;
                        // Console.WriteLine(key + "    " + value);
                        dic.Add(key, value);

                        reader.Read();//tag end
                    }
                    reader.Close();
                    if (dic["emstatus"] != "ERROR")
                    {
                        break;
                    }

                }
                catch (Exception e)
                {
                    Dts.TaskResult = (int)ScriptResults.Failure;
                    //use e to read exception
                }

            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_d5391ab22c1e49408bc08f2f2eb3cba5</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_d5391ab22c1e49408bc08f2f2eb3cba5</msb:DisplayName>
		<msb:ProjectId>{18A0C879-25B7-40F7-8B5E-37091249B977}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_d5391ab22c1e49408bc08f2f2eb3cba5.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d5391ab22c1e49408bc08f2f2eb3cba5")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_d5391ab22c1e49408bc08f2f2eb3cba5")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d5391ab22c1e49408bc08f2f2eb3cba5.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d5391ab22c1e49408bc08f2f2eb3cba5.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d5391ab22c1e49408bc08f2f2eb3cba5.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d5391ab22c1e49408bc08f2f2eb3cba5.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d5391ab22c1e49408bc08f2f2eb3cba5.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_d5391ab22c1e49408bc08f2f2eb3cba5.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMfTbVoAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAtjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGQ0AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAsMwAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAvBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACY
NAAAAAAAAEgAAAACAAUAiCIAAOwPAAABAAAAAAAAAHQyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBQCmAQAAAQAAEXIBAABwCnMQAAAKCxqNFQAAASUWcgMA
AHCiJRcCKBEAAApvEgAACnLgAQBwbxMAAApvFAAACqIlGHIAAgBwoiUZAigRAAAKbxIAAApyGgIA
cG8TAAAKbxQAAAqiKBUAAAoKBnMWAAAKJt4aJnI6AgBwKBcAAAomAigRAAAKF28YAAAK3gAWDDgG
AQAAAAcGbxkAAApzGgAACigbAAAKDXMcAAAKEwQWEwUrOwlvHQAACiYJbx4AAApvHwAACnIBAABw
KCAAAAotFwlvIQAACm8fAAAKcgEAAHAoIAAACiwGEQUXWBMFEQUYMsAWEwUWEwUrZQlvHgAACm8f
AAAKcgEAAHAoIAAACi0fCW8hAAAKbx8AAApyAQAAcCggAAAKLQgJbx0AAAotyglvIQAAChMGCW8d
AAAKJglvHgAAChMHEQQRBhEHbyIAAAoJbx0AAAomEQUXWBMFEQUaMsQJbyMAAAoRBHJeAgBwbyQA
AApycAIAcCggAAAKLALeHN4PJgIoEQAAChdvGAAACt4ACBdYDAgZP/P+//8CKBEAAAoWbxgAAAoq
AAABHAAAAAAMAF9rABoSAAABAACNAPJ/AQ8SAAABHgIoJQAACioeAigmAAAKKq5+AQAABC0ecnwC
AHDQAwAAAignAAAKbygAAApzKQAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4C
KCoAAAoqLnMIAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACA
BAAAI34AAOwEAABQBgAAI1N0cmluZ3MAAAAAPAsAAPACAAAjVVMALA4AABAAAAAjR1VJRAAAADwO
AACwAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJAwAAAPoBMwAWAAABAAAAJwAAAAUAAAAGAAAACQAA
AAEAAAAqAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAEAAAAGAAAAAQAAAAEAAAAAANAD
AQAAAAAABgB2AtwEBgAFA9wEBgDCAckEDwBQBQAABgDvAV4EBgBZAl4EBgA6Al4EBgDsAl4EBgCW
Al4EBgCvAl4EBgAGAl4EBgAhAjMDCgDKAn8DCgA0AX8DDgAZBuYFEgCTBPgDBgABAHUABgBwBAwE
BgAYBAwEBgClAckEBgDfBQwEBgCsBPwEBgB6BEkEDgB1AboDDgDWAboDDgBQATQEBgCKAdwECgCo
A38DFgCSBd8AFgCpAN8ABgBVAwwEDgBcAwwEGgAoBqUFGgD9BaUFBgCGBDsABgCdBDsABgD/AAwE
BgCyAAwEBgA3Bl4EAAAAADIAAAAAAAEAAQABABAAKQQOADkAAQABAAAAEAADBV8FVQABAAMAAAEQ
AJwFXwVpAAMABwADAQAAygUAAE0ABAAKABEAHQSyABEAJAG2ABEAmQC6AAYGZAC+AFaAugXBAFaA
BAHBAFAgAAAAAIYALwQGAAEAICIAAAAAhhi8BAYAAQAoIgAAAACDGLwEBgABADAiAAAAAJMIqATF
AAEAXCIAAAAAkwgMAcoAAQBjIgAAAACTCBgBzwABAGsiAAAAAJYI8QXVAAIAciIAAAAAhhi8BAYA
AgB6IgAAAACRGMIE2gACAAAAAQAtAwkAvAQBABEAvAQGABkAvAQKACkAvAQQADEAvAQQADkAvAQQ
AEEAvAQQAEkAvAQQAFEAvAQQAFkAvAQQAGEAvAQQAGkAvAQGAKEAvAQGAMkAvAQVANkAvAQGAHkA
vAQGAHEAwgUtAOEAjgUyAOkAAwQ3APEAIwM9APkA2AVBAAEBvAQQAAkBIwZHAOEACgYBAHkATQNO
ABkBvAQQAIEAbgFTAAwAvAQGAIEAkABiAIEAIwNmAPkAEwRmAPkAQAZqAIEA1gBmAAwAlQBwAIEA
aAEGAAwAAwR4AHEAvAQGAKkAvAQGACkBxAB/ACkBMwaIALEAvASOANEAvAQGAAgAFACoAAgAGACt
ACkAcwAVAS4ACwDtAC4AEwD2AC4AGwAVAS4AIwAeAS4AKwBHAS4AMwBHAS4AOwBHAS4AQwAeAS4A
SwBNAS4AUwBHAS4AWwBkAUMAYwCtAEkAcwAVAWEAewCtAGMAawCtABsAAwABAAQAAwAAAKwE3gAA
ACwB4wAAAPUF6AACAAQAAwACAAUABQABAAYABQACAAcABwBbAASAAAABAAAAyhk/eQAAAAAAAA4A
AAAEAAAAAAAAAAAAAACWAGwAAAAAAA4AAAAAAAAAAAAAAJ8AYAMAAAAABAAAAAAAAAAAAAAAlgAM
BAAAAAAEAAAAAAAAAAAAAACWAPgDAAAAAA4AAAAAAAAAAAAAAJ8ARQAAAAAABAAAAAAAAAAAAAAA
lgClBQAAAAAAAAAAAQAAAA0FAAAFAAIAAAAARGljdGlvbmFyeWAyAFNUX2Q1MzkxYWIyMmMxZTQ5
NDA4YmMwOGYyZjJlYjNjYmE1ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVy
Lk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBS
ZWFkAEFkZABkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlw
ZUZyb21IYW5kbGUAZ2V0X05hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBl
AEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNj
cmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBDcmVhdGUA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRl
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBT
U0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVu
dGltZS5WZXJzaW9uaW5nAERvd25sb2FkU3RyaW5nAFVyaQBNaWNyb3NvZnQuU3FsU2VydmVyLlNj
cmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRP
YmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfZDUzOTFhYjIyYzFlNDk0MDhiYzA4
ZjJmMmViM2NiYTUuZGxsAFN5c3RlbS5YbWwAZ2V0X0l0ZW0AU3lzdGVtAFRyaW0ARW51bQByZXNv
dXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0
aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBTdHJpbmdSZWFkZXIA
WG1sUmVhZGVyAFRleHRSZWFkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lz
dGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJl
c291cmNlcwBTVF9kNTM5MWFiMjJjMWU0OTQwOGJjMDhmMmYyZWIzY2JhNS5Qcm9wZXJ0aWVzLlJl
c291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfZDUzOTFhYjIyYzFlNDk0MDhiYzA4
ZjJmMmViM2NiYTUuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN5c3RlbS5XaW5k
b3dzLkZvcm1zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmplY3QAU3lz
dGVtLk5ldABnZXRfRGVmYXVsdABEaWFsb2dSZXN1bHQAc2V0X1Rhc2tSZXN1bHQAV2ViQ2xpZW50
AFNob3cATWVzc2FnZUJveABnZXRfQXNzZW1ibHkAb3BfSW5lcXVhbGl0eQAAAAABAIHbaAB0AHQA
cAA6AC8ALwBzAHkAcwBtAGEAaQBsAC4AZgBhAGcAbQBzAC4AbgBlAHQALwBjAC8AdABtAD8AQQBJ
AEQAPQAxADYANgAzADYAOAAmAEEAQwBUAEkATwBOAD0AUwBZAFMAVABFAE0AJgBlAG0AYQBpAGwA
PQBzAGUAcABpAGQAZQBoAC4AYgBlAHIAYQBuAGcAaQBAAEIAYQBtAGkAbABvAC4AYwBvAG0AJgBl
AHYAZQBuAHQAXwBpAGQAPQAwACYAZQB2AGUAbgB0AF8AbgBhAG0AZQA9AHMAdQBjAGMAZQBzAHMA
ZgB1AGwAUgB1AG4AJgBlAHYAZQBuAHQAXwBkAGUAcwBjAHIAaQBwAHQAaQBvAG4APQBFAHIAcgBv
AHIAIABUAHUAcgBuAGUAZAAgAEkAbgB0AG8AIABTAHUAYwBjAGUAcwBzACAAJgBlAHYAZQBuAHQA
XwBjAGEAdABlAGcAbwByAHkAPQBFAHIAcgBvAHIAXwBFAHYAZQBuAHQAcwAmAGMAbwBuAHQAYQBp
AG4AZQByAF8AbgBhAG0AZQA9AFMAeQBzAHQAZQBtAF8ASABlAGEAbAB0AGgAJgBlAHYAZQBuAHQA
XwBkAGEAdABlAD0AAB9VAHMAZQByADoAOgBTAHQAYQByAHQARABhAHQAZQAAGSYAZQB2AGUAbgB0
AF8AdABpAG0AZQA9AAAfVQBzAGUAcgA6ADoAUwB0AGEAcgB0AFQAaQBtAGUAACNGAHUAbgBkAGEA
bQBlAG4AdABhAGwAIABFAHIAcgBvAHIAABFlAG0AcwB0AGEAdAB1AHMAAAtFAFIAUgBPAFIAAHFT
AFQAXwBkADUAMwA5ADEAYQBiADIAMgBjADEAZQA0ADkANAAwADgAYgBjADAAOABmADIAZgAyAGUA
YgAzAGMAYgBhADUALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAA
PqNOMYp2hkyiZhQzkaajNwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERYREHCA4SPQgSQRUSRQIO
DggODgQgABJxBCAAEnUFIAESeRwDIAAcBQABDh0cBgABEYCJDgQgAQ4OBwABEkESgJEGFRJFAg4O
AyAAAgMgAA4FAAICDg4HIAIBEwATAQYgARMBEwAIAAESgJURgJkFIAASgJ0HIAIBDhKAnQi3elxW
GTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJZAwYSXQMGEhACBggDBhEUBAAAElkEAAASXQUAAQES
XQQAABIQAwAAAQQIABJZBAgAEl0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU1RfZDUzOTFhYjIyYzFlNDk0MDhiYzA4ZjJmMmViM2NiYTUA
AAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAAAAAAAAAAAAAAAAAAACAAAAHAEAAEgzAABIFQAAUlNEUwAAAAAAAAAAAAAAAAAAAAABAAAA
QzpcVXNlcnNcQk1MXEFwcERhdGFcTG9jYWxcVGVtcFx2c3RhXDc1YWIxYjYzZjBmNjQ1NWRhNTBi
NDJkMjMyY2Y2ZjdjXG9ialxSZWxlYXNlXFNUX2Q1MzkxYWIyMmMxZTQ5NDA4YmMwOGYyZjJlYjNj
YmE1LnBkYgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMNAAAAAAAAAAAAACmNAAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAmDQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA
/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQA/ecoZAAABAD95yhk/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGQANQAzADkAMQBhAGIAMgAyAGMAMQBlADQAOQA0ADAAOABiAGMAMAA4AGYAMgBmADIA
ZQBiADMAYwBiAGEANQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2
ADYAMAAyAC4AMwAxADAAMwA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfAGQANQAzADkAMQBhAGIAMgAyAGMAMQBlADQAOQA0ADAAOABiAGMAMAA4AGYAMgBmADIAZQBi
ADMAYwBiAGEANQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AZAA1ADMAOQAxAGEAYgAyADIAYwAxAGUANAA5ADQAMAA4AGIAYwAwADgAZgAy
AGYAMgBlAGIAMwBjAGIAYQA1AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGQANQAzADkAMQBhAGIAMgAyAGMAMQBlADQAOQA0ADAAOABiAGMAMAA4AGYAMgBm
ADIAZQBiADMAYwBiAGEANQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgA2ADAAMgAuADMAMQAwADMAOQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANgA2ADAAMgAuADMAMQAwADMAOQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAC4NAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Set Date"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{6EE2A573-20B2-4B00-B79A-8351D2E772D8}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set Date"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::StartDate]= (DT_DBDATE)@[System::ContainerStartTime]" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Set Time"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{1766DE9A-1AA5-47E9-98E8-65F49A8C21DB}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set Time"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::StartTime]= (DT_DBTIME) @[System::ContainerStartTime]" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Success Data Insert"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{7C8D905D-B39E-4C6F-B975-CAB1C205E3A8}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Success Data Insert"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"INSERT INTO [Gathering].tblEmailingLog( Event_ID, Event_Name,Created_at, Message,Execution_Path,Module, Event_Category)
  VALUES ('0','successfulRun', "+   (DT_WSTR, 25)@[System::ContainerStartTime]  +" ,'Error Turned Into Success',NULL,'SalesModule','Error_Events')"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{92A81132-8418-4643-9F72-4265A70F1AB4}"
              SQLTask:SqlStatementSource="INSERT INTO [Gathering].tblEmailingLog( Event_ID, Event_Name,Created_at, Message,Execution_Path,Module, Event_Category)&#xA;  VALUES ('0','successfulRun', 2/3/2018 5:31:27 PM ,'Error Turned Into Success',NULL,'SalesModule','Error_Events')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Temp Error Filling"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{70332EED-4072-4AAD-A037-7F3F52A5EBC8}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Temp Error Filling"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"INSERT INTO Gathering.TempSM_tblEmailingLog (Event_ID, event_name, created_at, message, execution_path, Module, Event_Category)
  SELECT
    1 AS Event_ID
   ,'Task Failed' AS Event_Name
   ,'"+ (DT_WSTR, 26) @[System::ContainerStartTime] +" ' AS Created_at
   ,om.[Message] AS Message
   ,emc.Execution_Path AS Execution_Path
   ,op.[object_name] AS Module
    ,'Error_events' AS Event_Category
  FROM SSISDB.internal.operations AS op
  JOIN SSISDB.internal.event_messages AS emc
    ON op.operation_id = emc.operation_id
  JOIN SSISDB.internal.operation_messages AS om
    ON emc.event_message_id = om.operation_message_id
  WHERE op.[object_name] = 'SalesModule'
  AND op.caller_name = 'BAMILO\\BI-SERVER$'
  AND emc.Event_Name IN ('OnError')
  AND op.start_time &gt; '"+ (DT_WSTR, 26) @[System::StartTime] +"'
  ORDER BY om.message_time ASC
  OFFSET 0 ROW
  FETCH NEXT 1 ROW ONLY;"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{92A81132-8418-4643-9F72-4265A70F1AB4}"
              SQLTask:SqlStatementSource="INSERT INTO Gathering.TempSM_tblEmailingLog (Event_ID, event_name, created_at, message, execution_path, Module, Event_Category)&#xA;  SELECT&#xA;    1 AS Event_ID&#xA;   ,'Task Failed' AS Event_Name&#xA;   ,'2/3/2018 5:46:44 PM ' AS Created_at&#xA;   ,om.[Message] AS Message&#xA;   ,emc.Execution_Path AS Execution_Path&#xA;   ,op.[object_name] AS Module&#xA;    ,'Error_events' AS Event_Category&#xA;  FROM SSISDB.internal.operations AS op&#xA;  JOIN SSISDB.internal.event_messages AS emc&#xA;    ON op.operation_id = emc.operation_id&#xA;  JOIN SSISDB.internal.operation_messages AS om&#xA;    ON emc.event_message_id = om.operation_message_id&#xA;  WHERE op.[object_name] = 'SalesModule'&#xA;  AND op.caller_name = 'BAMILO\BI-SERVER$'&#xA;  AND emc.Event_Name IN ('OnError')&#xA;  AND op.start_time &gt; '2/3/2018 5:31:27 PM'&#xA;  ORDER BY om.message_time ASC&#xA;  OFFSET 0 ROW&#xA;  FETCH NEXT 1 ROW ONLY;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Temp Success Filling"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8EF927A2-53F3-496A-9029-07D66636B279}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Temp Success Filling"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"INSERT INTO Gathering.TempSM_tblEmailingLog( Event_ID, Event_Name,Created_at, Message,Execution_Path,Module, Event_Category)
  VALUES ('0','successfulRun','"+ (DT_WSTR, 26) @[System::ContainerStartTime] +"','Error Turned Into Success',NULL,'SalesModule','Error_Events')"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{92A81132-8418-4643-9F72-4265A70F1AB4}"
              SQLTask:SqlStatementSource="INSERT INTO Gathering.TempSM_tblEmailingLog( Event_ID, Event_Name,Created_at, Message,Execution_Path,Module, Event_Category)&#xA;  VALUES ('0','successfulRun','2/3/2018 5:41:47 PM','Error Turned Into Success',NULL,'SalesModule','Error_Events')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{F49A33A4-0B08-408B-8D2C-BBD2C5C84CF2}"
          DTS:From="Package.EventHandlers[OnPostExecute]\Set Time"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package.EventHandlers[OnPostExecute]\Set Date" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{7F1C06C9-B9B6-4F38-9389-610D40CB957F}"
          DTS:From="Package.EventHandlers[OnPostExecute]\Set Date"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package.EventHandlers[OnPostExecute]\Compare Last Line Code" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{DCD48C0A-694F-4533-83EC-5121C7287853}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::ErrorCheck]==0"
          DTS:From="Package.EventHandlers[OnPostExecute]\Create Temp Table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package.EventHandlers[OnPostExecute]\Temp Success Filling" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{9F74D034-E522-4797-8B09-E76BFE152C8C}"
          DTS:From="Package.EventHandlers[OnPostExecute]\On Success"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package.EventHandlers[OnPostExecute]\Success Data Insert" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{99D9ADC7-5A43-478F-9EC7-72E2426157F5}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::ErrorCheck]&gt;0"
          DTS:From="Package.EventHandlers[OnPostExecute]\Create Temp Table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package.EventHandlers[OnPostExecute]\Temp Error Filling" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{CD8F98F3-2321-40BE-AE34-BC1C2E447432}"
          DTS:From="Package.EventHandlers[OnPostExecute]\Temp Error Filling"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package.EventHandlers[OnPostExecute]\Set Time" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{1570A225-B32C-46DB-B6A4-320F4BA8CEB7}"
          DTS:From="Package.EventHandlers[OnPostExecute]\Temp Success Filling"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package.EventHandlers[OnPostExecute]\Set Time" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="170.4,41.6"
          Id="Package.EventHandlers[OnError]\ErrorCheck Counter"
          TopLeft="175.333326366213,47.1466670413548" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="168,41.6"
          Id="Package.EventHandlers[OnPostExecute]\Create Temp Table"
          TopLeft="68.3999999999999,97.5999999999999" />
        <NodeLayout
          Size="118.4,41.6"
          Id="Package.EventHandlers[OnPostExecute]\On Error"
          TopLeft="852.8,160" />
        <NodeLayout
          Size="134.4,41.6"
          Id="Package.EventHandlers[OnPostExecute]\On Success"
          TopLeft="860,111.2" />
        <NodeLayout
          Size="120,41.6"
          Id="Package.EventHandlers[OnPostExecute]\Set Time"
          TopLeft="112.8,276.8" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package.EventHandlers[OnPostExecute]\Success Data Insert"
          TopLeft="699.6,116.8" />
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint 4]"
          TopLeft="860,134.8">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-30.8000000000003,0"
              Start="0,0"
              End="-23.3000000000003,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-23.3000000000003,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="129.6,41.6"
          Id="Package.EventHandlers[OnPostExecute]\Temp Success Filling"
          TopLeft="172,205.6" />
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint 2]"
          TopLeft="179.066666666667,139.2">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="57.733333333333,66.4000000000001"
              Start="0,0"
              End="57.733333333333,58.9000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.9358490566038" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.9358490566038"
                    Point2="0,26.9358490566038"
                    Point3="4,26.9358490566038" />
                  <mssgle:LineSegment
                    End="53.733333333333,26.9358490566038" />
                  <mssgle:CubicBezierSegment
                    Point1="53.733333333333,26.9358490566038"
                    Point2="57.733333333333,26.9358490566038"
                    Point3="57.733333333333,30.9358490566038" />
                  <mssgle:LineSegment
                    End="57.733333333333,58.9000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="20.8666666666665,31.9358490566038,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="129.6,41.6"
          Id="Package.EventHandlers[OnPostExecute]\Temp Error Filling"
          TopLeft="15.5999999999994,202.4" />
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint 5]"
          TopLeft="125.733333333333,139.2">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-45.3333333333339,63.2000000000002"
              Start="0,0"
              End="-45.3333333333339,55.7000000000002">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.6377358490567" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.6377358490567"
                    Point2="0,25.6377358490567"
                    Point3="-4,25.6377358490567" />
                  <mssgle:LineSegment
                    End="-41.3333333333339,25.6377358490567" />
                  <mssgle:CubicBezierSegment
                    Point1="-41.3333333333339,25.6377358490567"
                    Point2="-45.3333333333339,25.6377358490567"
                    Point3="-45.3333333333339,29.6377358490567" />
                  <mssgle:LineSegment
                    End="-45.3333333333339,55.7000000000002" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-30.666666666667,30.6377358490567,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint 6]"
          TopLeft="80.3999999999994,244">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="64.4000000000004,32.7999999999999"
              Start="0,0"
              End="64.4000000000004,25.2999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.391304347826" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.391304347826"
                    Point2="0,21.391304347826"
                    Point3="4,21.391304347826" />
                  <mssgle:LineSegment
                    End="60.4000000000004,21.391304347826" />
                  <mssgle:CubicBezierSegment
                    Point1="60.4000000000004,21.391304347826"
                    Point2="64.4000000000004,21.391304347826"
                    Point3="64.4000000000004,25.391304347826" />
                  <mssgle:LineSegment
                    End="64.4000000000004,25.2999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint 7]"
          TopLeft="236.8,247.2">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-63.9999999999998,29.6"
              Start="0,0"
              End="-63.9999999999998,22.1">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.8" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.8"
                    Point2="0,14.8"
                    Point3="-4,14.8" />
                  <mssgle:LineSegment
                    End="-59.9999999999998,14.8" />
                  <mssgle:CubicBezierSegment
                    Point1="-59.9999999999998,14.8"
                    Point2="-63.9999999999998,14.8"
                    Point3="-63.9999999999998,18.8" />
                  <mssgle:LineSegment
                    End="-63.9999999999998,22.1" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="118.4,41.6"
          Id="Package.EventHandlers[OnPostExecute]\Set Date"
          TopLeft="261.599999999999,280.8" />
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint]"
          TopLeft="232.8,299.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28.7999999999996,0"
              Start="0,0"
              End="21.2999999999996,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="21.2999999999996,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="129.6,41.6"
          Id="Package.EventHandlers[OnPostExecute]\Compare Last Line Code"
          TopLeft="410.8,280.8" />
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint 1]"
          TopLeft="379.999999999999,301.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="30.8000000000005,0"
              Start="0,0"
              End="23.3000000000005,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="23.3000000000005,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package.EventHandlers[OnPostExecute]\On Error">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="138.4,41.6"
          Id="Package.EventHandlers[OnPostExecute]\On Error\Data Fetcher"
          TopLeft="317.599999046326,207.2" />
        <NodeLayout
          Size="137.6,41.6"
          Id="Package.EventHandlers[OnPostExecute]\On Error\Data Reader"
          TopLeft="316,34.4" />
        <NodeLayout
          Size="156,41.6"
          Id="Package.EventHandlers[OnPostExecute]\On Error\Data Conversion"
          TopLeft="302.4,122.4" />
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute]\On Error.Paths[ADO NET Source Output]"
          TopLeft="382.6,76">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46.4"
              Start="0,0"
              End="0,38.9">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.9" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute]\On Error.Paths[Data Conversion Output]"
          TopLeft="383.599999523163,164">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.2"
              Start="0,0"
              End="0,35.7">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.7" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package.EventHandlers[OnPostExecute]\On Error\Data Reader">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package.EventHandlers[OnPostExecute]\Compare Last Line Code">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="141.6,41.6"
          Id="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader"
          TopLeft="164,35.2" />
        <NodeLayout
          Size="172.8,41.6"
          Id="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader"
          TopLeft="347.2,32" />
        <NodeLayout
          Size="108,41.6"
          Id="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Result"
          TopLeft="280,228.8" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Merge Join"
          TopLeft="268.8,133.6" />
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute]\Compare Last Line Code.Paths[OLE DB Source Output]"
          TopLeft="234.8,76.8">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="78.5333333333334,56.8"
              Start="0,0"
              End="78.5333333333334,49.3">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.6643902439025" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.6643902439025"
                    Point2="0,33.6643902439025"
                    Point3="4,33.6643902439025" />
                  <mssgle:LineSegment
                    End="74.5333333333334,33.6643902439025" />
                  <mssgle:CubicBezierSegment
                    Point1="74.5333333333334,33.6643902439025"
                    Point2="78.5333333333334,33.6643902439025"
                    Point3="78.5333333333334,37.6643902439025" />
                  <mssgle:LineSegment
                    End="78.5333333333334,49.3" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute]\Compare Last Line Code.Paths[OLE DB Source Output1]"
          TopLeft="433.6,73.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-79.7333333333333,60"
              Start="0,0"
              End="-79.7333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5609756097561" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.5609756097561"
                    Point2="0,35.5609756097561"
                    Point3="-4,35.5609756097561" />
                  <mssgle:LineSegment
                    End="-75.7333333333333,35.5609756097561" />
                  <mssgle:CubicBezierSegment
                    Point1="-75.7333333333333,35.5609756097561"
                    Point2="-79.7333333333333,35.5609756097561"
                    Point3="-79.7333333333333,39.5609756097561" />
                  <mssgle:LineSegment
                    End="-79.7333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute]\Compare Last Line Code.Paths[Merge Join Output]"
          TopLeft="333.8,175.2">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53.6"
              Start="0,0"
              End="0,46.1">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.1" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\Temp Reader">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package.EventHandlers[OnPostExecute]\Compare Last Line Code\EmailingLog Reader">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>